---
type Listing = {
  title: string; url: string; price?: string; address?: string;
  img?: string; beds?: number; baths?: number;
};
const { listings } = Astro.props as { listings: Listing[] };
---
<style>
  .grid { display:grid; grid-template-columns:repeat(auto-fill,minmax(260px,1fr)); gap:16px; }
  .card { border:1px solid #e5e7eb; border-radius:12px; overflow:hidden; background:#fff; }
  .img { display:block; width:100%; height:160px; object-fit:cover; background:#f3f4f6; }
  .body { padding:12px 14px; }
  .title { font-weight:600; }
  .muted { color:#64748b; font-size:.92rem; }
  .meta { display:flex; gap:10px; margin-top:6px; color:#64748b; font-size:.9rem; }
  .price { margin-top:6px; font-weight:600; }
  .link { display:inline-block; margin-top:8px; text-decoration:none; color:#0f172a; }
  .link:hover { text-decoration:underline; }
</style>

<div class="grid">
  {listings.map(l => (
    <a href={l.url} class="card" aria-label={`Open ${l.title}`}>
      {l.img
        ? <img class="img" src={l.img} alt={l.title} width="640" height="360" loading="lazy" />
        : <div class="img" aria-hidden="true" />
      }
      <div class="body">
        <div class="title">{l.title}</div>
        {l.address && <div class="muted">{l.address}</div>}
        <div class="meta">
          {typeof l.beds === 'number' && <span>{l.beds} bd</span>}
          {typeof l.baths === 'number' && <span>{l.baths} ba</span>}
        </div>
        {l.price && <div class="price">{l.price}</div>}
        <div class="link">View listing â†’</div>
      </div>
    </a>
  ))}
</div>
